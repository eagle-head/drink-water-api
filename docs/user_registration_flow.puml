@startuml
title User Registration Flow with Email/Password and Third-Party Identity Providers

actor User
participant "Client\n(iOS App)" as App
participant "Authorization Server\n(Keycloak)" as AuthServer
participant "Identity Provider\n(Apple)" as IdP
participant "Resource Server\n(Spring Boot)" as API

== Registration with Email and Password ==

User -> App: Opens the application
User -> App: Chooses Register with Email
App -> AuthServer: Redirects to registration page
User -> AuthServer: Provides email and password
AuthServer -> AuthServer: Checks if email is already in use
AuthServer -> User: Sends verification email
User -> AuthServer: Verifies the email
AuthServer --> App: Returns JWT Token\n(ID, Access Token, Refresh Token)

App -> API: Request with JWT Token
API -> AuthServer: Validates the Token
AuthServer --> API: Token is valid

App -> User: Requests additional data
User -> App: Provides additional data
App -> API: Sends additional data
API -> API: Stores user data

== Registration with Identity Provider (IdP) ==

User -> App: Opens the application
User -> App: Chooses Register with IdP
App -> App: Generates code verifier and code challenge
App -> AuthServer: Redirects to IdP registration\n(includes code challenge)
AuthServer -> IdP: Starts authentication
IdP --> AuthServer: Authentication successful
AuthServer -> AuthServer: Checks if email from IdP is already in use
AuthServer --> App: Returns authorization code
App -> AuthServer: Sends authorization code and code verifier
AuthServer --> App: Returns JWT Token\n(ID, Access Token, Refresh Token)

App -> API: Request with JWT Token
API -> AuthServer: Validates the Token
AuthServer --> API: Token is valid

App -> User: Requests additional data
User -> App: Provides additional data
App -> API: Sends additional data
API -> API: Stores user data

@enduml
