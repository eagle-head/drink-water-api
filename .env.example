# =============================================================================
# DRINK WATER API - ENVIRONMENT VARIABLES TEMPLATE
# =============================================================================
# Copy this file to .env and customize for your environment
# CRITICAL: Never commit .env files containing real credentials to version control
# 
# IMPORTANT: ALL VARIABLES ARE REQUIRED - NO DEFAULTS PROVIDED
# Application will fail to start if any variable is missing

# -----------------------------------------------------------------------------
# APPLICATION CORE CONFIGURATION
# -----------------------------------------------------------------------------
# Application identity and basic settings
APP_NAME=drink-water-api
APP_VERSION=0.0.1-SNAPSHOT
APP_ENVIRONMENT=development
SERVER_PORT=8081

# Error handling configuration
ERROR_STACKTRACE_POLICY=on_param

# -----------------------------------------------------------------------------
# SERIALIZATION CONFIGURATION
# -----------------------------------------------------------------------------
# Jackson JSON serialization settings
JACKSON_TIMEZONE=UTC
JACKSON_WRITE_DATES_AS_TIMESTAMPS=false

# -----------------------------------------------------------------------------
# LOCALE & INTERNATIONALIZATION CONFIGURATION
# -----------------------------------------------------------------------------
# Locale configuration for different regions
DEFAULT_LOCALE=en_US
SUPPORTED_LOCALES=en_US,pt_BR

# Message source configuration
MESSAGE_SOURCE_ENCODING=UTF-8

# -----------------------------------------------------------------------------
# SPRING PROFILES CONFIGURATION
# -----------------------------------------------------------------------------
# Spring framework profile activation
SPRING_PROFILES_ACTIVE=dev

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# PostgreSQL connection settings
DATABASE_URL=jdbc:postgresql://localhost:5432/drink_water_db
DATABASE_USERNAME=username
DATABASE_PASSWORD=secure_password_here
DATABASE_DRIVER=org.postgresql.Driver
DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect

# Connection pool settings (REQUIRED - no defaults)
DATABASE_POOL_SIZE=10
DATABASE_MIN_IDLE=2
DATABASE_CONNECTION_TIMEOUT=30000

# JPA/Hibernate configuration
JPA_HIBERNATE_DDL_AUTO=create-drop
JPA_OPEN_IN_VIEW=false
JPA_DEFER_DATASOURCE_INITIALIZATION=true

# SQL initialization settings
SQL_INIT_MODE=always

# -----------------------------------------------------------------------------
# KEYCLOAK OAUTH2 CONFIGURATION
# -----------------------------------------------------------------------------
# Keycloak server settings
KEYCLOAK_URL=http://localhost:8080
KEYCLOAK_REALM=drinkwater
KEYCLOAK_CLIENT_ID=drinkwaterapp
KEYCLOAK_USERNAME=admin-drinkwater
KEYCLOAK_PASSWORD=admin_password_here

# JWT configuration
KEYCLOAK_ISSUER_URI=http://localhost:8080/realms/drinkwater
KEYCLOAK_JWK_SET_URI=http://localhost:8080/realms/drinkwater/protocol/openid-connect/certs

# -----------------------------------------------------------------------------
# CORS CONFIGURATION
# -----------------------------------------------------------------------------
# CORS settings for frontend integration (REQUIRED - no defaults)
BASE_URL=http://localhost:3000
CORS_ALLOWED_ORIGIN=http://localhost:3000
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Authorization,Content-Type,Accept
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=3600

# -----------------------------------------------------------------------------
# SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# Authentication settings
JWT_SIGNING_KEY=your_jwt_signing_key_here
ENCRYPTION_KEY=your_encryption_key_here
API_SECRET_KEY=your_api_secret_key_here

# -----------------------------------------------------------------------------
# ACTUATOR & MONITORING CONFIGURATION
# -----------------------------------------------------------------------------
# Actuator endpoint configuration
ACTUATOR_ENDPOINTS=health,info,metrics,prometheus
ACTUATOR_BASE_PATH=/actuator
ACTUATOR_HEALTH_SHOW_DETAILS=when-authorized
ACTUATOR_HEALTH_SHOW_COMPONENTS=always

# Actuator endpoint paths (customizable for security)
ACTUATOR_PROMETHEUS_PATH=/actuator/prometheus
ACTUATOR_HEALTH_PATH=/actuator/health
ACTUATOR_INFO_PATH=/actuator/info
ACTUATOR_METRICS_PATH=/actuator/metrics

# Prometheus metrics configuration
PROMETHEUS_METRICS_ENABLED=true
PROMETHEUS_METRICS_EXPORT_ENABLED=true
PROMETHEUS_METRICS_STEP=10s

# Distributed tracing configuration (REQUIRED - no defaults)
TRACING_ENABLED=false
TRACING_SAMPLING_RATE=0.1
ZIPKIN_ENDPOINT=http://localhost:9411/api/v2/spans

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
# Global log levels
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_APP=INFO
LOGGING_LEVEL_SECURITY=WARN
LOGGING_LEVEL_OAUTH2=WARN

# SQL and database logging
LOGGING_LEVEL_SQL=WARN
LOGGING_LEVEL_SQL_PARAMS=WARN

# Development-specific logging (REQUIRED - no defaults)
LOGGING_LEVEL_HIBERNATE=WARN
LOGGING_LEVEL_SPRINGFRAMEWORK=WARN

# -----------------------------------------------------------------------------
# RUNTIME CONFIGURATION (REFRESHABLE WITHOUT RESTART)
# -----------------------------------------------------------------------------
# Runtime logging levels (can be updated via /actuator/refresh)
RUNTIME_LOGGING_LEVEL_ROOT=INFO
RUNTIME_LOGGING_LEVEL_APP=INFO
RUNTIME_LOGGING_LEVEL_SECURITY=WARN
RUNTIME_LOGGING_LEVEL_OAUTH2=WARN
RUNTIME_LOGGING_LEVEL_SQL=WARN
RUNTIME_LOGGING_LEVEL_SQL_PARAMS=WARN
RUNTIME_LOGGING_LEVEL_HIBERNATE=WARN
RUNTIME_LOGGING_LEVEL_SPRINGFRAMEWORK=WARN

# Runtime monitoring configuration (can be updated via /actuator/refresh)
RUNTIME_PROMETHEUS_METRICS_STEP=10s
RUNTIME_TRACING_SAMPLING_RATE=0.1
RUNTIME_ZIPKIN_ENDPOINT=http://localhost:9411/api/v2/spans
RUNTIME_TRACING_ENABLED=false
RUNTIME_PROMETHEUS_METRICS_ENABLED=true

# Runtime actuator configuration (can be updated via /actuator/refresh)
RUNTIME_ACTUATOR_HEALTH_SHOW_DETAILS=when-authorized
RUNTIME_ACTUATOR_HEALTH_SHOW_COMPONENTS=true

# -----------------------------------------------------------------------------
# DOCKER COMPOSE VARIABLES
# -----------------------------------------------------------------------------
# Main application database settings
DB_NAME=drink_water_db
DB_USER=username
DB_PASSWORD=password

# Keycloak database settings
KEYCLOAK_DB_NAME=security
KEYCLOAK_DB_USER=admin
KEYCLOAK_DB_PASSWORD=admin

# Keycloak container settings
KC_HOSTNAME=localhost
KC_PORT=8080
KC_HOSTNAME_STRICT_BACKCHANNEL=false
KC_HOSTNAME_STRICT_HTTPS=false
KC_DATABASE_TYPE=postgres
KC_MANAGEMENT_PORT=9000

# Keycloak admin user configuration (CRITICAL - required for admin access)
KC_BOOTSTRAP_ADMIN_USERNAME=admin
KC_BOOTSTRAP_ADMIN_PASSWORD=admin
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin

# Application container settings (when using containerized app - currently commented out)
API_PORT=8081
FRONTEND_URL=http://localhost:3000

# -----------------------------------------------------------------------------
# CONTAINER IMAGE VERSIONS
# -----------------------------------------------------------------------------
# Container image versions for Docker Compose
POSTGRES_VERSION=16-alpine
KEYCLOAK_VERSION=26.0.7
KEYCLOAK_POSTGRES_VERSION=16-alpine

# -----------------------------------------------------------------------------
# CONTAINER RESOURCE LIMITS
# -----------------------------------------------------------------------------
# Docker Compose infrastructure resource limits
HEALTH_CHECK_INTERVAL=30s
RESTART_POLICY=unless-stopped

# PostgreSQL container resource configuration
POSTGRES_MEMORY_LIMIT=512M
POSTGRES_MEMORY_RESERVATION=256M
POSTGRES_CPU_LIMIT=0.3

# Keycloak database container resources
KEYCLOAK_DB_MEMORY_LIMIT=512M
KEYCLOAK_DB_MEMORY_RESERVATION=256M
KEYCLOAK_DB_CPU_LIMIT=0.3

# Keycloak container resources
KEYCLOAK_MEMORY_LIMIT=1G
KEYCLOAK_MEMORY_RESERVATION=512M
KEYCLOAK_CPU_LIMIT=0.8

# =============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# =============================================================================

# -----------------------------------------------------------------------------
# DEVELOPMENT ENVIRONMENT SETTINGS
# -----------------------------------------------------------------------------
# For local development, use these additional settings:
# SPRING_PROFILES_ACTIVE=dev
# JPA_HIBERNATE_DDL_AUTO=create-drop
# LOGGING_LEVEL_ROOT=DEBUG
# LOGGING_LEVEL_SQL=DEBUG
# ACTUATOR_ENDPOINTS=health,info,metrics,prometheus,beans,env
# ACTUATOR_HEALTH_SHOW_DETAILS=always

# -----------------------------------------------------------------------------
# STAGING ENVIRONMENT SETTINGS
# -----------------------------------------------------------------------------
# For staging environment, use these settings:
# SPRING_PROFILES_ACTIVE=staging
# JPA_HIBERNATE_DDL_AUTO=validate
# LOGGING_LEVEL_ROOT=INFO
# ACTUATOR_ENDPOINTS=health,info,metrics,prometheus
# ACTUATOR_HEALTH_SHOW_DETAILS=when-authorized

# -----------------------------------------------------------------------------
# PRODUCTION ENVIRONMENT SETTINGS
# -----------------------------------------------------------------------------
# For production environment, use these settings:
# SPRING_PROFILES_ACTIVE=prod
# JPA_HIBERNATE_DDL_AUTO=validate
# LOGGING_LEVEL_ROOT=WARN
# LOGGING_LEVEL_SQL=ERROR
# ACTUATOR_ENDPOINTS=health,info,metrics,prometheus
# ACTUATOR_HEALTH_SHOW_DETAILS=never
# Use HTTPS URLs for all Keycloak endpoints
# Restrict CORS origins to actual frontend domains

# =============================================================================
# SECURITY NOTES AND WARNINGS
# =============================================================================
# 
# CRITICAL SECURITY VARIABLES (Never commit real values):
# - DATABASE_PASSWORD
# - KEYCLOAK_PASSWORD  
# - DB_PASSWORD
# - KEYCLOAK_DB_PASSWORD
# - JWT_SIGNING_KEY
# - ENCRYPTION_KEY
# - API_SECRET_KEY
# - GRAFANA_ADMIN_PASSWORD
# 
# PRODUCTION SECURITY CHECKLIST:
# □ Use HTTPS URLs for all external services
# □ Restrict CORS origins to actual domains
# □ Limit actuator endpoints (health,info,metrics,prometheus only)
# □ Set appropriate log levels (WARN or ERROR)
# □ Use strong, unique passwords
# □ Consider secrets management solutions (Vault, AWS Secrets Manager)
# □ Regularly rotate credentials
# □ Monitor for configuration drift
# 
# VALIDATION REQUIREMENTS (STRICT FAIL-FAST):
# - ALL VARIABLES MUST BE PRESENT OR APPLICATION WILL FAIL TO START
# - DATABASE_URL must be valid JDBC PostgreSQL URL
# - KEYCLOAK_URL must be valid HTTP/HTTPS URL
# - KEYCLOAK_ISSUER_URI must start with KEYCLOAK_URL/realms/KEYCLOAK_REALM
# - KEYCLOAK_JWK_SET_URI must start with KEYCLOAK_URL/realms/KEYCLOAK_REALM
# - SERVER_PORT must be valid port number (1024-65535)
# - BASE_URL should be included in CORS_ALLOWED_ORIGINS
# - All numeric values must be within specified ranges
# - All boolean values must be 'true' or 'false'
# - All log levels must be: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
# 
# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 
# 1. Copy this file: cp .env.example .env
# 2. Edit .env with your specific values
# 3. Never commit .env to version control
# 4. Use different .env files for different environments
# 5. Validate configuration before deployment
# 
# Quick validation commands:
# - Development: make dev-start && make health-check
# - Staging: ./scripts/validate-env.sh staging --test-connections
# - Production: ./scripts/validate-env.sh prod --security-audit
# 
# =============================================================================